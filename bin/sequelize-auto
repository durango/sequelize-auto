#!/usr/bin/env node

var sequelizeAuto = require('../')
  , path = require('path');

var argv = require('optimist')
  .usage('Usage: sequelize-auto -h <host> -d <database> -u <user> -x [password] -p [port]  --dialect [dialect] -c [/path/to/config] -o [/path/to/models] -t [tableName]')
  .demand(['h', 'd'])
  .alias('h', 'host')
  .alias('d', 'database')
  .alias('u', 'user')
  .alias('x', 'pass')
  .alias('p', 'port')
  .alias('c', 'config')
  .alias('o', 'output')
  .alias('e', 'dialect')
  .alias('a', 'additional')
  .alias('t', 'tables')
  .describe('h', 'IP/Hostname for the database.')
  .describe('d', 'Database name.')
  .describe('u', 'Username for database.')
  .describe('x', 'Password for database.')
  .describe('p', 'Port number for database.')
  .describe('c', 'JSON file for Sequelize\'s constructor "options" flag object as defined here: https://sequelize.readthedocs.org/en/latest/api/sequelize/')
  .describe('o', 'What directory to place the models.')
  .describe('e', 'The dialect/engine that you\'re using: postgres, mysql, sqlite, mssql')
  .describe('a', 'Path to a json file containing model definitions (for all tables) which are to be defined within a model\'s configuration parameter. For more info: https://sequelize.readthedocs.org/en/latest/docs/models-definition/#configuration')
  .describe('t', 'Comma-separated names of tables to import (also you can additionally specify model name for some/all tables like "TableName as ModelName").')
  .argv;

var dir = argv.o || path.resolve(process.cwd() + '/models');

var configFile = {
  spaces: true,
  indentation: 2,
  directory: dir
};

if (argv.c) {
  configFile = require(path.resolve(argv.c));
}

var additional = {};
if (argv.a) {
  additional = require(path.resolve(argv.a));
}

if (configFile.additional) {
  additional = configFile.additional;
}

configFile.additional = additional;
configFile.dialect = argv.e || configFile.dialect || 'mysql';
configFile.port = argv.p || configFile.port || 3306;
configFile.host = argv.h || configFile.host || 'localhost';
configFile.storage = argv.d;
configFile.tables = configFile.tables || (argv.t && argv.t.split(',')) || null;
configFile.aliases = [];

if (configFile.tables) {
  var re = /\s* as \s*/;
  for (var i = 0; i < configFile.tables.length ; i++ ) {
    var arr = (configFile.tables[i]).split(re,2);

    console.log( 'Arr' + arr + ' table ' + i + ':' + configFile.tables[i]);

    configFile.tables[i] = arr[0];
    var tableName = arr[0];

    var aliasName = (arr[1]) ? arr[1] : arr[0];
    var aliasObject = { 'table' : tableName, 'alias': aliasName };

    console.log( 'Alias object: ' + aliasObject.toString() );
    configFile.aliases.push( aliasObject);
    //configFile.aliases[ configFile.tables[i] ] = (arr[1]) ? arr[1] : arr[0];
  }
}

console.log('== Tables: ')
console.log( configFile.tables)
console.log( '>>> Aliases:' + configFile.aliases)

if (configFile.dialect.toLowerCase() === 'mssql' && configFile.port === 3306)
    configFile.port = 1433; // default port for MSSQL Server is 1433, not 3306

var auto = new sequelizeAuto(argv.d, argv.u, (!! argv.x ? ('' + argv.x) : null), configFile);

auto.run(function (err) {
  if (err) throw err;
  console.log('Done!');
});
